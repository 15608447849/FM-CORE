// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `PropertiesAdmin.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Ice;

/**
 * Provides type-specific helper functions.
 **/
public final class PropertiesAdminPrxHelper extends Ice.ObjectPrxHelperBase implements PropertiesAdminPrx
{
    private static final String __getPropertiesForPrefix_name = "getPropertiesForPrefix";

    public java.util.Map<java.lang.String, java.lang.String> getPropertiesForPrefix(String prefix)
    {
        return getPropertiesForPrefix(prefix, null, false);
    }

    public java.util.Map<java.lang.String, java.lang.String> getPropertiesForPrefix(String prefix, java.util.Map<String, String> __ctx)
    {
        return getPropertiesForPrefix(prefix, __ctx, true);
    }

    private java.util.Map<java.lang.String, java.lang.String> getPropertiesForPrefix(String prefix, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__getPropertiesForPrefix_name);
        return end_getPropertiesForPrefix(begin_getPropertiesForPrefix(prefix, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_getPropertiesForPrefix(String prefix)
    {
        return begin_getPropertiesForPrefix(prefix, null, false, false, null);
    }

    public Ice.AsyncResult begin_getPropertiesForPrefix(String prefix, java.util.Map<String, String> __ctx)
    {
        return begin_getPropertiesForPrefix(prefix, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_getPropertiesForPrefix(String prefix, Ice.Callback __cb)
    {
        return begin_getPropertiesForPrefix(prefix, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_getPropertiesForPrefix(String prefix, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_getPropertiesForPrefix(prefix, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_getPropertiesForPrefix(String prefix, Callback_PropertiesAdmin_getPropertiesForPrefix __cb)
    {
        return begin_getPropertiesForPrefix(prefix, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_getPropertiesForPrefix(String prefix, java.util.Map<String, String> __ctx, Callback_PropertiesAdmin_getPropertiesForPrefix __cb)
    {
        return begin_getPropertiesForPrefix(prefix, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_getPropertiesForPrefix(String prefix, 
                                                        IceInternal.Functional_GenericCallback1<java.util.Map<java.lang.String, java.lang.String>> __responseCb, 
                                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_getPropertiesForPrefix(prefix, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_getPropertiesForPrefix(String prefix, 
                                                        IceInternal.Functional_GenericCallback1<java.util.Map<java.lang.String, java.lang.String>> __responseCb, 
                                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                        IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getPropertiesForPrefix(prefix, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_getPropertiesForPrefix(String prefix, 
                                                        java.util.Map<String, String> __ctx, 
                                                        IceInternal.Functional_GenericCallback1<java.util.Map<java.lang.String, java.lang.String>> __responseCb, 
                                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_getPropertiesForPrefix(prefix, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_getPropertiesForPrefix(String prefix, 
                                                        java.util.Map<String, String> __ctx, 
                                                        IceInternal.Functional_GenericCallback1<java.util.Map<java.lang.String, java.lang.String>> __responseCb, 
                                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                        IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getPropertiesForPrefix(prefix, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_getPropertiesForPrefix(String prefix, 
                                                         java.util.Map<String, String> __ctx, 
                                                         boolean __explicitCtx, 
                                                         boolean __synchronous, 
                                                         IceInternal.Functional_GenericCallback1<java.util.Map<java.lang.String, java.lang.String>> __responseCb, 
                                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getPropertiesForPrefix(prefix, __ctx, __explicitCtx, __synchronous, 
                                            new IceInternal.Functional_TwowayCallbackArg1<java.util.Map<java.lang.String, java.lang.String>>(__responseCb, __exceptionCb, __sentCb)
                                                {
                                                    public final void __completed(Ice.AsyncResult __result)
                                                    {
                                                        PropertiesAdminPrxHelper.__getPropertiesForPrefix_completed(this, __result);
                                                    }
                                                });
    }

    private Ice.AsyncResult begin_getPropertiesForPrefix(String prefix, 
                                                         java.util.Map<String, String> __ctx, 
                                                         boolean __explicitCtx, 
                                                         boolean __synchronous, 
                                                         IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__getPropertiesForPrefix_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__getPropertiesForPrefix_name, __cb);
        try
        {
            __result.prepare(__getPropertiesForPrefix_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(prefix);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public java.util.Map<java.lang.String, java.lang.String> end_getPropertiesForPrefix(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __getPropertiesForPrefix_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            java.util.Map<java.lang.String, java.lang.String> __ret;
            __ret = new java.util.TreeMap<String, String>();
            int __sz0 = __is.readSize();
            for(int __i0 = 0; __i0 < __sz0; __i0++)
            {
                String __key;
                __key = __is.readString();
                String __value;
                __value = __is.readString();
                __ret.put(__key, __value);
            }
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __getPropertiesForPrefix_completed(Ice.TwowayCallbackArg1<java.util.Map<java.lang.String, java.lang.String>> __cb, Ice.AsyncResult __result)
    {
        Ice.PropertiesAdminPrx __proxy = (Ice.PropertiesAdminPrx)__result.getProxy();
        java.util.Map<java.lang.String, java.lang.String> __ret = null;
        try
        {
            __ret = __proxy.end_getPropertiesForPrefix(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __getProperty_name = "getProperty";

    public String getProperty(String key)
    {
        return getProperty(key, null, false);
    }

    public String getProperty(String key, java.util.Map<String, String> __ctx)
    {
        return getProperty(key, __ctx, true);
    }

    private String getProperty(String key, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        __checkTwowayOnly(__getProperty_name);
        return end_getProperty(begin_getProperty(key, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_getProperty(String key)
    {
        return begin_getProperty(key, null, false, false, null);
    }

    public Ice.AsyncResult begin_getProperty(String key, java.util.Map<String, String> __ctx)
    {
        return begin_getProperty(key, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_getProperty(String key, Ice.Callback __cb)
    {
        return begin_getProperty(key, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_getProperty(String key, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_getProperty(key, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_getProperty(String key, Callback_PropertiesAdmin_getProperty __cb)
    {
        return begin_getProperty(key, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_getProperty(String key, java.util.Map<String, String> __ctx, Callback_PropertiesAdmin_getProperty __cb)
    {
        return begin_getProperty(key, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_getProperty(String key, 
                                             IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_getProperty(key, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_getProperty(String key, 
                                             IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getProperty(key, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_getProperty(String key, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_getProperty(key, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_getProperty(String key, 
                                             java.util.Map<String, String> __ctx, 
                                             IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                             IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                             IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getProperty(key, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_getProperty(String key, 
                                              java.util.Map<String, String> __ctx, 
                                              boolean __explicitCtx, 
                                              boolean __synchronous, 
                                              IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                              IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getProperty(key, __ctx, __explicitCtx, __synchronous, 
                                 new IceInternal.Functional_TwowayCallbackArg1<String>(__responseCb, __exceptionCb, __sentCb)
                                     {
                                         public final void __completed(Ice.AsyncResult __result)
                                         {
                                             PropertiesAdminPrxHelper.__getProperty_completed(this, __result);
                                         }
                                     });
    }

    private Ice.AsyncResult begin_getProperty(String key, 
                                              java.util.Map<String, String> __ctx, 
                                              boolean __explicitCtx, 
                                              boolean __synchronous, 
                                              IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__getProperty_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__getProperty_name, __cb);
        try
        {
            __result.prepare(__getProperty_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(key);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public String end_getProperty(Ice.AsyncResult __iresult)
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __getProperty_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            String __ret;
            __ret = __is.readString();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __getProperty_completed(Ice.TwowayCallbackArg1<String> __cb, Ice.AsyncResult __result)
    {
        Ice.PropertiesAdminPrx __proxy = (Ice.PropertiesAdminPrx)__result.getProxy();
        String __ret = null;
        try
        {
            __ret = __proxy.end_getProperty(__result);
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __setProperties_name = "setProperties";

    public void setProperties(java.util.Map<java.lang.String, java.lang.String> newProperties)
    {
        setProperties(newProperties, null, false);
    }

    public void setProperties(java.util.Map<java.lang.String, java.lang.String> newProperties, java.util.Map<String, String> __ctx)
    {
        setProperties(newProperties, __ctx, true);
    }

    private void setProperties(java.util.Map<java.lang.String, java.lang.String> newProperties, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_setProperties(begin_setProperties(newProperties, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_setProperties(java.util.Map<java.lang.String, java.lang.String> newProperties)
    {
        return begin_setProperties(newProperties, null, false, false, null);
    }

    public Ice.AsyncResult begin_setProperties(java.util.Map<java.lang.String, java.lang.String> newProperties, java.util.Map<String, String> __ctx)
    {
        return begin_setProperties(newProperties, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_setProperties(java.util.Map<java.lang.String, java.lang.String> newProperties, Ice.Callback __cb)
    {
        return begin_setProperties(newProperties, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_setProperties(java.util.Map<java.lang.String, java.lang.String> newProperties, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_setProperties(newProperties, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_setProperties(java.util.Map<java.lang.String, java.lang.String> newProperties, Callback_PropertiesAdmin_setProperties __cb)
    {
        return begin_setProperties(newProperties, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_setProperties(java.util.Map<java.lang.String, java.lang.String> newProperties, java.util.Map<String, String> __ctx, Callback_PropertiesAdmin_setProperties __cb)
    {
        return begin_setProperties(newProperties, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_setProperties(java.util.Map<java.lang.String, java.lang.String> newProperties, 
                                               IceInternal.Functional_VoidCallback __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_setProperties(newProperties, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_setProperties(java.util.Map<java.lang.String, java.lang.String> newProperties, 
                                               IceInternal.Functional_VoidCallback __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_setProperties(newProperties, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_setProperties(java.util.Map<java.lang.String, java.lang.String> newProperties, 
                                               java.util.Map<String, String> __ctx, 
                                               IceInternal.Functional_VoidCallback __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_setProperties(newProperties, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_setProperties(java.util.Map<java.lang.String, java.lang.String> newProperties, 
                                               java.util.Map<String, String> __ctx, 
                                               IceInternal.Functional_VoidCallback __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_setProperties(newProperties, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_setProperties(java.util.Map<java.lang.String, java.lang.String> newProperties, 
                                                java.util.Map<String, String> __ctx, 
                                                boolean __explicitCtx, 
                                                boolean __synchronous, 
                                                IceInternal.Functional_VoidCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_setProperties(newProperties, 
                                   __ctx, 
                                   __explicitCtx, 
                                   __synchronous, 
                                   new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_setProperties(java.util.Map<java.lang.String, java.lang.String> newProperties, 
                                                java.util.Map<String, String> __ctx, 
                                                boolean __explicitCtx, 
                                                boolean __synchronous, 
                                                IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__setProperties_name, __cb);
        try
        {
            __result.prepare(__setProperties_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            PropertyDictHelper.write(__os, newProperties);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_setProperties(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __setProperties_name);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static PropertiesAdminPrx checkedCast(Ice.ObjectPrx __obj)
    {
        return checkedCastImpl(__obj, ice_staticId(), PropertiesAdminPrx.class, PropertiesAdminPrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static PropertiesAdminPrx checkedCast(Ice.ObjectPrx __obj, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __ctx, ice_staticId(), PropertiesAdminPrx.class, PropertiesAdminPrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static PropertiesAdminPrx checkedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return checkedCastImpl(__obj, __facet, ice_staticId(), PropertiesAdminPrx.class, PropertiesAdminPrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static PropertiesAdminPrx checkedCast(Ice.ObjectPrx __obj, String __facet, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __facet, __ctx, ice_staticId(), PropertiesAdminPrx.class, PropertiesAdminPrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @return A proxy for this type.
     **/
    public static PropertiesAdminPrx uncheckedCast(Ice.ObjectPrx __obj)
    {
        return uncheckedCastImpl(__obj, PropertiesAdminPrx.class, PropertiesAdminPrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type.
     **/
    public static PropertiesAdminPrx uncheckedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return uncheckedCastImpl(__obj, __facet, PropertiesAdminPrx.class, PropertiesAdminPrxHelper.class);
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::Ice::PropertiesAdmin"
    };

    /**
     * Provides the Slice type ID of this type.
     * @return The Slice type ID.
     **/
    public static String ice_staticId()
    {
        return __ids[1];
    }

    public static void __write(IceInternal.BasicStream __os, PropertiesAdminPrx v)
    {
        __os.writeProxy(v);
    }

    public static PropertiesAdminPrx __read(IceInternal.BasicStream __is)
    {
        Ice.ObjectPrx proxy = __is.readProxy();
        if(proxy != null)
        {
            PropertiesAdminPrxHelper result = new PropertiesAdminPrxHelper();
            result.__copyFrom(proxy);
            return result;
        }
        return null;
    }

    public static final long serialVersionUID = 0L;
}
