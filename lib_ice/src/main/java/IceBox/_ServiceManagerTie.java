// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `IceBox.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package IceBox;

public class _ServiceManagerTie extends _ServiceManagerDisp implements Ice.TieBase
{
    public _ServiceManagerTie()
    {
    }

    public _ServiceManagerTie(_ServiceManagerOperations delegate)
    {
        _ice_delegate = delegate;
    }

    public java.lang.Object ice_delegate()
    {
        return _ice_delegate;
    }

    public void ice_delegate(java.lang.Object delegate)
    {
        _ice_delegate = (_ServiceManagerOperations)delegate;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        if(!(rhs instanceof _ServiceManagerTie))
        {
            return false;
        }

        return _ice_delegate.equals(((_ServiceManagerTie)rhs)._ice_delegate);
    }

    public int hashCode()
    {
        return _ice_delegate.hashCode();
    }

    public void addObserver(ServiceObserverPrx observer, Ice.Current __current)
    {
        _ice_delegate.addObserver(observer, __current);
    }

    public java.util.Map<java.lang.String, java.lang.String> getSliceChecksums(Ice.Current __current)
    {
        return _ice_delegate.getSliceChecksums(__current);
    }

    public void shutdown(Ice.Current __current)
    {
        _ice_delegate.shutdown(__current);
    }

    public void startService(String service, Ice.Current __current)
        throws AlreadyStartedException,
               NoSuchServiceException
    {
        _ice_delegate.startService(service, __current);
    }

    public void stopService(String service, Ice.Current __current)
        throws AlreadyStoppedException,
               NoSuchServiceException
    {
        _ice_delegate.stopService(service, __current);
    }

    private _ServiceManagerOperations _ice_delegate;

    public static final long serialVersionUID = -8454238507146095543L;
}
